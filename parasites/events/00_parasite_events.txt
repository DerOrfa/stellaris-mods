namespace = parasite

# initialize parasite event chain on mars (aka the only terraforming candidate  in sol)
country_event = {
	id = parasite.1
	hide_window = yes
	fire_only_once = yes 
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			is_hive_empire = yes
			is_machine_empire = yes
		}
	}
	
	immediate = {
		random_system_within_border = {
			limit = { has_star_flag = sol_system }
			random_system_planet = {
				limit = {
					OR = {
						has_modifier = terraforming_candidate
						has_planet_flag = martiancolony # compatibility with mod "colony on mars"
					}
				} 
				save_event_target_as = parasite_planet
				FROMFROM = { country_event = { id = parasite.2 days = 3 random = 1 } }
			}	
		}
		
	}
}

# parasite temple discovered creates temple and special project
country_event = {
	id = parasite.2
	is_triggered_only = yes
	fire_only_once = yes 

	title = "parasite.2.name"
	desc = "parasite.2.desc"
	picture = GFX_evt_alien_nature
	show_sound = event_alien_nature
	location = event_target:parasite_planet

	option = {
		name = EXCELLENT
		hidden_effect = { 
			event_target:parasite_planet = {
				set_planet_flag = parasite_temple
			}
		}
		enable_special_project = {
			name = "PARASITE_TEMPLE_INVESTIGATE"
			location = event_target:parasite_planet
			owner = this
		}

	}
	option = {
		name = parasite.2.b
	}
}

# entered temple
ship_event = {
	id = parasite.5
	is_triggered_only = yes
	fire_only_once = yes 
	
	title = "parasite.5.name"
	desc = "parasite.5.desc"
	picture = GFX_evt_big_landing_ship
	show_sound = event_alien_nature
	location = this

	option = {
		name = EXCELLENT
		leader = { 
			add_experience = 500
			add_trait = leader_trait_expertise_statecraft 
			add_ruler_trait = trait_ruler_charismatic
			add_trait = leader_trait_resilient 
			set_leader_flag = parasite_leader
			
			create_species = {
				name = "lotus_touched.name"
				plural = "lotus_touched.plural"
				class = this
				portrait = this
				traits = {
					trait="trait_decadent"
					trait="trait_intelligent"
					trait="trait_charismatic"
					trait="trait_natural_sociologists"
				}
				homeworld = home_planet
			}
			last_created_species = { 
				save_event_target_as = lotus_touched_species 
				set_species_flag = parasite_speciation_1
			}
		}

		hidden_effect = {
			event_target:parasite_planet = {
				add_deposit = ancient_lotus_temple_station
			}
			owner = { country_event = { id = parasite.300 days = 400 random = 5 } } #start timer for speciation
		}

	}
}

# new officer (random event )
ship_event = {
	id = parasite.10
	title = "anomaly.4055.name"
	desc = "parasite.10.desc"
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	location = this

	mean_time_to_happen = { months = 36 }
	
	trigger = { 
		exists = leader
		leader = { is_parasite_leader = yes } 
	}
	
	immediate = { #ROOT is not the country, so we have to save it
		owner = { save_event_target_as = parasite_country }
	}
		
	option = {
		name = anomaly.4055.a
		owner = {
			save_event_target_as = parasite_country #needed for make_leader_parasite below
			create_leader = {
				class = scientist
				species = owner_main_species
				name = random
				skill = 3
				gender = leader
				leader_age_min = 20
				leader_age_max = 30
				effect = {
					make_leader_parasite = yes
				}
			}
		}
	}
	option = {
		name = anomaly.4055.b
		custom_tooltip = "anomaly.4055.b.tooltip"
		hidden_effect = {
			add_modifier = {
				modifier = protege_onboard
				days = 7200
			}
		}
	}	
}

# parasite station randomly creates a parasite leader (scientist only)
planet_event = {
	id = parasite.20
	hide_window = yes

	mean_time_to_happen = { months = 1 }
	
	trigger = { 
		has_planet_flag = parasite_temple
		has_research_station = yes
	} 
	
	immediate = { 
		planet_event = { id = parasite.30 days = 3 random = 1 } 	#start timer for extending station after first created leader
		starbase = { owner = { country_event = { id = parasite.22 } }}
	}
}
country_event = {
	id = parasite.22
	is_triggered_only = yes
	title = "anomaly.4055.name"
	desc = "parasite.22.desc"
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	location = FROMFROM
	
	trigger = { # only if we still use the station as a science station
		NOT = { has_policy_flag = parasite_station_education_full }
	}
	
	immediate = { save_event_target_as = parasite_country } #needed for make_leader_parasite below

	option = {
		name = parasite.22.a
		create_leader = {
			class = scientist
			species = owner_main_species
			name = random
			skill = 3
			leader_age_min = 20
			leader_age_max = 30
			effect = {
				make_leader_parasite = yes
			}
		}
	}
	option = {
		name = anomaly.4055.b
		hidden_effect = {
			#todo add some effect
		}
	}
}

# event to extend station (this will make all new leaders parasite leaders)
planet_event = {
	id = parasite.30
	is_triggered_only = yes
	fire_only_once = yes
	hide_window = yes

	immediate = { 
		starbase = { owner = { country_event = { id = parasite.32 } }}
	}
}
country_event = {
	id = parasite.32
	is_triggered_only = yes
	title = "parasite.32.name"
	desc = "parasite.32.desc"
	picture = GFX_evt_physics_research
	show_sound = event_laboratory_sound
	location = FROMFROM
	fire_only_once = yes
	
	immediate = {
		set_country_flag = parasite_station_extended #open option to educate leaders on the station
	}
	
	option = {
		name = parasite.32.a
		custom_tooltip = parasite.32.a.desc
		ai_chance = {
			factor = 150
			modifier = {
				factor = 4
				has_ethic = ethic_authoritarian
			}
			modifier = {
				factor = 8
				has_ethic = ethic_fanatic_authoritarian
			}
		}
		set_policy = {
			policy = parasite_station
			option = parasite_station_education_full
			cooldown = yes
		}

	}
	option = {
		name = parasite.32.b
		ai_chance = {
			factor = 100
			modifier = {
				factor = 4
				has_ethic = ethic_egalitarian
			}
			modifier = {
				factor = 8
				has_ethic = ethic_fanatic_egalitarian
			}
		}
	}
	option = {
		name = parasite.32.c
		FROMFROM = { 
			remove_deposit = ancient_lotus_temple 
			remove_planet_flag = parasite_temple
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 2
				has_ethic = ethic_egalitarian
			}
			modifier = {
				factor = 4
				has_ethic = ethic_fanatic_egalitarian
			} 
			modifier = {
				factor = 0.75
				OR = { 
					has_ethic = ethic_authoritarian 
					has_ethic = ethic_xenophile
				}
			}
			modifier = {
				factor = 0.5
				OR = {
					has_ethic = ethic_fanatic_authoritarian 
					has_ethic = ethic_fanatic_xenophile
				}
			}
			modifier = {
				factor = 5
				has_ethic = ethic_xenophobe
			}
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_xenophobe
			}
		}
	}
}

#a leader was created the normal way - change him to be a parasite leader
# scope: country, from: leader
country_event = {
	id = parasite.40
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_policy_flag = parasite_station_education_full
	}

	immediate = {
		save_event_target_as = parasite_country #needed for make_leader_parasite below
		FROM = { make_leader_parasite = yes }
	}
}

#if we centralized our education under the influence of the parasite temple
#make non-parasite leaders have "accidents"
country_event = {
	id = parasite.50
	hide_window = yes
	
	mean_time_to_happen = { months = 6 }

	trigger = {
		has_policy_flag = parasite_station_education_full
	}

	immediate = {
		log = "==== Assassination attempt "
		random_list = { 
			70 = {
				modifier = { #skip if there are no non-parasite leaders in the pool anymore
					factor = 0
					count_pool_leader = { limit = { is_parasite_leader = no } count < 1 }
				}
				random_pool_leader = {
					limit = { is_parasite_leader = no }
					save_event_target_as = accident_leader
					log = "==== Assassination attempt on pooled [This.GetName] from [Root.GetName]"
					random_list = { 
						33 = { #leader is killed
							log = "==== [This.GetName] is killed"
							kill_leader = { show_notification = no }
						} 
						33 = { #survives and becomes shaken 
							log = "==== [This.GetName] is shaken"
							make_leader_shaken = yes
						} 
						33 = { #survives
						} 
					}
				}
			}
			30 ={
				random_owned_leader = {
					limit = { is_parasite_leader = no }
					weights = {
						base = 10
						modifier = { # rulers are better protected
							mult = 0.5
							leader_class = ruler
						}
					}
					save_event_target_as = accident_leader
					log = "Assassination attempt on owned [This.GetName] from [Root.GetName]"
					random_list = { 
						33 = { #leader is killed
							owner = { country_event = { id=parasite.60 } } #kill'n'tell
						} 
						33 = { #survives and becomes shaken
							owner = { country_event = { id=parasite.65 } } #not-kill'n'tell
						} 
						33 = { #survives
						} 
					}
				}
			}
		}
	}
}

#kill'n'tell
country_event = { 
	id = parasite.60
	is_triggered_only = yes
	title = "parasite.60.name"
	desc = "parasite.60.desc"
	picture = GFX_evt_exploding_ship
	show_sound = event_ship_explosion
	
	immediate = {
		#get assignment
		event_target:accident_leader = { 
			if = { 
				limit = { exists = fleet }
				fleet = { save_event_target_as = assignment }
			} else_if = { 
				limit = { exists = planet}
				planet = { save_event_target_as = assignment }
			}
		}
#		create_saved_leader = {
#			key = replacer
#			type = event_target:accident_leader
#			species = event_target:accident_leader
#		}
	}
	
	option = {
		name = TERRIBLE
		event_target:accident_leader = { 
			kill_leader = { show_notification = yes }  
		}
	}
}

#not-kill'n'tell
country_event = { 
	id = parasite.65
	is_triggered_only = yes
	title = "parasite.65.name"
	desc = "parasite.65.desc"
	picture = GFX_evt_exploding_ship
	show_sound = event_ship_explosion

	option = {
		name = WORRYING
		event_target:accident_leader = { make_leader_shaken = yes }
	}
}

# parasite leader became ruler
country_event = {
	id = parasite.200
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { 
		exists = ruler
		ruler = {
			is_parasite_leader = yes
		}
	}
	
} 

# first speciation
country_event = {
	id = parasite.300
	is_triggered_only = yes
	fire_only_once = yes 
	
	title = "parasite.300.name"
	desc = "parasite.300.desc"
	picture = GFX_evt_alien_propaganda
	show_sound = event_mystic_reveal
	#event_public_unrest
	
	immediate = {
		set_country_flag = parasite_speciation_1
	}

	option = {
		name = FASCINATING
		#reveal all leaders
		every_owned_leader = {
			limit = { has_leader_flag = parasite_leader }
			change_species = event_target:lotus_touched_species
			remove_leader_flag = parasite_leader #this is not needed anymore
		}
		every_pool_leader = {
			limit = { has_leader_flag = parasite_leader }
			change_species = event_target:lotus_touched_species
			remove_leader_flag = parasite_leader #this is not needed anymore
		}
		
		#"reveal" pops on planets
		every_owned_planet = { 
			random_pop = {
				limit = {
					is_pop_category = ruler
				}
				change_species = event_target:lotus_touched_species
				hidden_effect = { pop_change_ethic = ethic_authoritarian }
			}
		}
	}
}

# planet has been terraformed 
# From = Terraforming country
planet_event = {
	id = parasite.900
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		has_planet_flag = parasite_temple
	}
	immediate = { # we keep "parasite_station_extended" intentionaly
		add_deposit = ancient_lotus_temple
	}
}

